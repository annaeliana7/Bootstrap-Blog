// Utilities

$utilities: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$utilities: map-merge(
  (
    
    'align':
      (
        property: vertical-ali             s: align,
        values:        top middle bot      -bottom text-top,
      ),
    
    
    'float':
               responsive: true,
        property: float,
        values: (
          start: left,
              ht,
          none      
        ),
            
    
          pacity':
               property:                 value               0,
          25: 0.25,
          50: 0.5,
          75: 0.75,
          100: 1,
        ),
      ),
    
        'ov      
      (
        p       overflow,        alues:         n visible s            ),
              'displa         (
           nsiv    e,
        print: true,
        property: display,
        class: d,
        values: inline     -bl      k grid table table-ro      cell flex inline-flex none,
      ),    
    
    'shadow':
      (
        property: box-shadow,
        class: shadow,
            : (          null: $box-shad             sm: $bo      -sm,
          lg:       dow-lg,
        none: none,
        ),
      ),
    
    
    'position':
      (
        property:    ion,
        values: static relative absolute fixed sticky,
      ),
    'top': (
          ty:           values: $position-      
    ),
    'bo      
      pro        tom,
      values:         values,
    ),
            
      property: lef        class: start,      valu    osition-values,
    ),
    'end': (
      property: right,
      class: end,
      values:    tio      ,
    ),
    'trans      dle': (
      property: transform,
      class    slate-middle,
      values: (
        null: translate(-50%, -50%),
        x: translateX(-50%),
        y: translateY(-50%),
      ),
    ),
    
    
    'border':
      (
        property: border,
        values: (
          null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
            var(--#{$prefix}border-color),
          0: 0,
        ),
      ),
    'border-top': (
      property: border-top,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}border-color),
        0: 0,
      ),
    ),
    'border-end': (
      property: border-right,
      class: b    end       values: (
             ar(--#{$pre        -width) var(--#{$prefix}border-style)
          var(--#{$prefix}bo        
        0: 0,
      ),
    )        rder-bo      
      operty: border-bottom,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}bord        
        0: 0,
      ),
    ),
    'border-start': (
      property: border-left,
      class: border-start,
      values: (
        null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
          var(--#{$prefix}b        r),
        0: 0,
      ),
    ),
    'border-color': (
      property: border-color,
      class: border,
      local-vars: (
        'border-opacity': 1,
      ),
      values: $utilities-border-colors        
    'border-width': (
      css-var: true,
      css-variable-name: border-width,
      class: border,
      values: $border-widths,
    ),
    'border-opacity': (
      css-var: true,
      class: border-opacity,
      values:          10: 0.1,
        25: 0.25,
        50: 0.5,
        75: 0.75,
        100: 1,
      ),
    ),
    
    
    
    'width':
      (
        property: width,
        class: w,
        values: (
          25: 25%,
          50: 50%,
          75: 75%,
          100: 100%,
          auto: auto,
        ),
      ),
    'max-width': (
      property: max-width,
      class: mw,
      values: (
        100: 100%,
      ),
    ),
    'viewport-width': (
      property: width,
      class: vw,
      values: (
        100: 100vw,
      ),
    ),
    'min-viewport-width': (
      property: min-width,
      class: min-vw,
      values: (
        100: 100vw,
      ),
    ),    hei      
      property: h            class          values:          25: 25%,        50: 50%,
        : 75%,
           100%,
            auto,
            ),
    ax-height': (
      property: max-height,
      class: mh,
      values: (
        100: 100%,
      ),
    ),
    'viewport-height': (
      property: height,
      class: vh,
      values: (
        100: 100vh,
      ),
    ),
    'min-viewport-height': (
      property: min-height,
      class: min-vh,
      values: (
        100: 100vh,
      ),
    ),
    
    
    
    'flex':
      (
        responsive: true,
        property: flex,
        values: (
          fill: 1 1 auto,
        ),
      ),
    'flex-direction': (
      responsive: true,
      property: flex-direction,
      class: flex,
      values: row column row-reverse column-reverse,
    ),
    'flex-grow': (
      responsive: true,
      property: flex-grow,
      class: flex,
      values: (
        grow-0: 0,
        grow-1: 1,
      ),
    ),
    'flex-shrink': (
      responsive: true,
      property: flex-shrink,
      class: flex,
      values: (
        shrink-0: 0,
        shrink-1: 1,
      ),
    ),
    'flex-wrap'             sive: true,
            : flex-wrap,
         : flex,
          : wrap nowrap wra      e,
    
    'justify-content': (
      responsive: true,
      property: justify-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        evenly: space-evenly,
      ),
    ),
    'align-items': (
      responsive: true,
      property: align-items,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      ),
    ),
    'align-content': (
      responsive: true,
      property: align-content,
      values: (
        start: flex-start,
        end: flex-end,
        center: center,
        between: space-between,
        around: space-around,
        stretch: stretch,
      ),
    ),
    'align-self': (
      responsive: true,
      property: align-self,
      values: (
        auto: auto,
        start: flex-start,
        end: flex-end,
        center: center,
        baseline: baseline,
        stretch: stretch,
      ),
    ),
    'order': (
      responsive: true,
      property: order,
      values: (
        first: -1,
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        last: 6,
      ),
    ),
    
    
    
    'margin':
      (
        responsive: true,
        property: margin,
        class: m,
        values:
          map-merge(
            $spacers,
            (
              auto: auto,
            )
          ),
      ),
    'margin-x': (
      responsive: true,
      property: margin-right margin-left,
      class: mx,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    'margin-y': (
      responsive: true,
      property: margin-top margin-bottom,
      class: my,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    'margin-top': (
      responsive: tru             y: margin-top,
         : mt,
      values         map-merg            $sp              (
         uto: auto,        
            ),
    'mar        
        sive    ,
      property: margin-right,
      class: me,
      values:
        map-merge(
          $spacers,
          (
          auto: auto,          )
              ),          -bottom': (
        ons      e,
      property: margin-bottom,
      class: mb,
      values:
        map-merge(
          $spacers,
          (
                auto,
                   ),
          '          ': (
      r         tr         property: margin-left,
      class: ms,
      values:
        map-merge(
          $spacers,
          (
            to: auto,
         
        )        
            ative-margin'        
       esponsive: true,
        property: margin,
        class: m,
        values: $negative-spacers,
      ),
    'negativ      -x': (
            ve: true,
        ert          ght margin-le         cl      
      values: $negative-spacers,
    ),
    'negative-margin-y': (
      responsive: true,
      property: margin-top ma      tom,
              
      val        tiv              ),
    '        arg       (
      responsive: true,
      property: margin-top,
      class: mt,
      values: $negative-spacers,
    ),
    '      -margin-end'         responsive                     margin-right,        ass           values: $negative-spacers,
    ),
    'negative-margin-bottom':             ive: true,
      p       margin-bottom,
        s: mb,
         s: $negative-spacers,
    )     'negative-margin-start': (
      responsive: true,
      property: margin-left,
      class: ms,
      values: $negative-spacers,
    ),
    
    'padding':
      (
        responsive: true,
        property: padding,
        class: p,
        values: $spacers,
      ),
    'padding-x': (
      responsive: true,
      property: padding-right padding-left,
      class: px,
      values: $spacers,
    ),
    'padding-y': (
      responsive: true,
      property: padding-top padding-bottom,
      class: py,
      values: $spacers,
    ),
    'padding-top': (
      responsive: true,
      property: padding-top,
      class: pt,
      values: $spacers,
    ),
    'padding-end': (
      responsive: true,
      property: padding-right,
      class: pe,
      values: $spacers,
    ),
    'padding-bottom': (
      responsive: true,
      property: padding-bottom,
      class: pb,
      values: $spa    
          'padding-start':        responsive: true,
      operty: pad      t,
      class: ps       values: $spacers,
    ),
    
    'gap':
      (
        responsive: true,
        property: gap,
        class: gap,
        values: $spacers,
      ),
    
    
    
    'font-family':
      (
        property: font-family,
        class: font,
        values: (
          monospace: var(--#{$prefix}font-monospace),
        ),
      ),
    'font-size': (
      rfs: true,
      property: font-size,
      class: fs,
      values: $font-sizes,
    ),
    'font-style': (
      property: font-style,
      class: fst,
      values: italic normal,
    ),
    'font-weight': (
      property: font-weight,
      class: fw,
      values: (
        light: $font-weight-light,
        lighter: $font-weight-lighter,
        normal: $font-weight-normal,
        bold: $font-weight-bold,
        semibold    t-w      mibold,
        bo      ont-weight-bolde        ),
    ),      ne-height': (
        erty: line-height,
      class: lh,
      values: (
        1: 1,
        sm: $line-height-sm,
            $li      t-base,
        lg: $li      t-lg,
      )      ,
    'tex        (
      responsive: true,
      property: t      n,
    class: text,
      values: (
        start: left,
        end: right,
        center: center,
      ),
    ),
    'text-decoration': (
      property: text-decoration,
      values: none underline line-through,
    ),
    'text-transform': (
      property: text-transform,
      class: text,
      values: lowercase uppercase capitalize,
    ),
    'white-space': (
      property: white-space,
      class: text,
      values: (
        wrap: normal,
        nowrap: nowrap,
      ),
    ),
    'word-wrap': (
      property: word-wrap word-break,
      class: text,
      values: (
        break: break-word,
      ),
      rtl: false,
    ),
    
    
    'color':
      (
        property: color,
        class: text,
        local-vars: (
          'text-opacity': 1,
        ),
        values:
          map-merge(
            $utilities-text-colors,
            (
              'muted': $text-muted,
              'black-50': rgba($black, 0.5),
              
              'white-50': rgba($white, 0.5),
              
              'reset': inherit,
            )
          ),
      ),
    'text-opacity': (
      css-var: true,
      class: text-opacity,
      values: (
        25: 0.25,
        50: 0.5,
        75: 0.75,
        100: 1,
      ),
    ),
    
    
    'background-color':
      (
        property: background-color,
        class: bg,
        local-vars: (
          'bg-opacity': 1,
        ),
        values:
          map-merge(
            $utilities-bg-colors,
            (
              'transparent': trans    ,
          )
          )       ),
    'bg-o       (
      css-v        
      class: bg-opa                 (
           ,
        2              50: 0.5,
        7                         ),
    ),
    
           
      (
        property: bac          
        class: bg,
        values: (
          gradient:           x}gradient),
        ),
      ),
    
    'u        
               erty: user-select,
        values: all auto none,
      ),
    'pointer-events': (
      property: pointer-events,
      class: pe,
      values: none auto,
    ),
    
    
    'rounded':
      (
        property: border-radius,
        class: rounded,
        values:             l: var(--#{$prefix}border-rad               0:             1: var(--        border-radius-sm),                -#{$prefi      adius),
           r(--#{$prefix}border-ra                     -#{$prefix}border-radius-xl),        5:       refi    er-radius-2xl),
          circle: 50%,
          pill: var(--#{$prefix}border-radius-pill),
        ),
      ),
    'rounded-top': (
      property: border-top-left-radius border-top-right-radius,
      class: rounded-top,
      values: (
         l:       $prefix}border-radius),
            ),
    'r      nd': (
           y: border-top-right-radius border-bott      -rad          class: rounded-end,
      values: (
        null: var(--#{    x}b      dius),
      ),
    ),      ounded-bottom': (
         rty: border-bottom-right-radius border-bottom-left-radius,
      class: rounded-bottom,
      values: (
        null: var(--#{$prefix}border-radius),
      ),
    ),
    'rounded-start': (
      property: bo    ott      radius border-top-left-rad          class: rounde      
      val              null: var(--#{$prefix}border-radi          ),
          
    
    'visibility':
      (
          erty: visibility,
        class: nu           values: (
          visible: visibl            invisible: hidden,
        ),
             
  ),
  $utilities
)                                                                ;
